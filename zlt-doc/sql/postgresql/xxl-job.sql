Set schema 'xxl-job';

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_JOB_DETAILS
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_JOB_DETAILS;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE XXL_JOB_QRTZ_JOB_DETAILS
(
    SCHED_NAME        varchar(120) NOT NULL,
    JOB_NAME          varchar(200) NOT NULL,
    JOB_GROUP         varchar(200) NOT NULL,
    DESCRIPTION       varchar(250) NULL DEFAULT NULL,
    JOB_CLASS_NAME    varchar(250) NOT NULL,
    IS_DURABLE        varchar(1)   NOT NULL,
    IS_NONCONCURRENT  varchar(1)   NOT NULL,
    IS_UPDATE_DATA    varchar(1)   NOT NULL,
    REQUESTS_RECOVERY varchar(1)   NOT NULL,
    JOB_DATA          bytea        NULL,
    PRIMARY KEY (SCHED_NAME, JOB_NAME, JOB_GROUP)
);

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** B_QRTZ_JOB_DETAILS
-- SQLINES DEMO *** -----------
-- SQLINES LICENSE FOR EVALUATION USE ONLY
INSERT INTO XXL_JOB_QRTZ_JOB_DETAILS
VALUES ('getSchedulerFactoryBean', '1', '1', NULL, 'com.xxl.job.admin.core.jobbean.RemoteHttpJobBean', '0', '0', '0',
        '0',
        0x


-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_TRIGGERS
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_TRIGGERS;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE XXL_JOB_QRTZ_TRIGGERS
(
    SCHED_NAME     varchar(120) NOT NULL,
    TRIGGER_NAME   varchar(200) NOT NULL,
    TRIGGER_GROUP  varchar(200) NOT NULL,
    JOB_NAME       varchar(200) NOT NULL,
    JOB_GROUP      varchar(200) NOT NULL,
    DESCRIPTION    varchar(250) NULL DEFAULT NULL,
    NEXT_FIRE_TIME bigint       NULL DEFAULT NULL,
    PREV_FIRE_TIME bigint       NULL DEFAULT NULL,
    PRIORITY       int          NULL DEFAULT NULL,
    TRIGGER_STATE  varchar(16)  NOT NULL,
    TRIGGER_TYPE   varchar(8)   NOT NULL,
    START_TIME     bigint       NOT NULL,
    END_TIME       bigint       NULL DEFAULT NULL,
    CALENDAR_NAME  varchar(200) NULL DEFAULT NULL,
    MISFIRE_INSTR  smallint     NULL DEFAULT NULL,
    JOB_DATA       bytea        NULL,
    PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    CONSTRAINT XXL_JOB_QRTZ_TRIGGERS_ibfk_1 FOREIGN KEY (SCHED_NAME, JOB_NAME, JOB_GROUP) REFERENCES XXL_JOB_QRTZ_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP) ON DELETE RESTRICT ON UPDATE RESTRICT
);

CREATE INDEX SCHED_NAME ON XXL_JOB_QRTZ_TRIGGERS (SCHED_NAME, JOB_NAME, JOB_GROUP);

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** B_QRTZ_TRIGGERS
-- SQLINES DEMO *** -----------
-- SQLINES LICENSE FOR EVALUATION USE ONLY
INSERT INTO XXL_JOB_QRTZ_TRIGGERS
VALUES ('getSchedulerFactoryBean', '1', '1', '1', '1', NULL, 1547913600000, -1, 5, 'WAITING', 'CRON', 1547654599000, 0,
        NULL, 2, '');


-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_BLOB_TRIGGERS
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_BLOB_TRIGGERS;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE XXL_JOB_QRTZ_BLOB_TRIGGERS
(
    SCHED_NAME    varchar(120) NOT NULL,
    TRIGGER_NAME  varchar(200) NOT NULL,
    TRIGGER_GROUP varchar(200) NOT NULL,
    BLOB_DATA     bytea        NULL,
    PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    CONSTRAINT XXL_JOB_QRTZ_BLOB_TRIGGERS_ibfk_1 FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES XXL_JOB_QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) ON DELETE RESTRICT ON UPDATE RESTRICT
);

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_CALENDARS
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_CALENDARS;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE XXL_JOB_QRTZ_CALENDARS
(
    SCHED_NAME    varchar(120) NOT NULL,
    CALENDAR_NAME varchar(200) NOT NULL,
    CALENDAR      bytea        NOT NULL,
    PRIMARY KEY (SCHED_NAME, CALENDAR_NAME)
);

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_CRON_TRIGGERS
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_CRON_TRIGGERS;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE XXL_JOB_QRTZ_CRON_TRIGGERS
(
    SCHED_NAME      varchar(120) NOT NULL,
    TRIGGER_NAME    varchar(200) NOT NULL,
    TRIGGER_GROUP   varchar(200) NOT NULL,
    CRON_EXPRESSION varchar(200) NOT NULL,
    TIME_ZONE_ID    varchar(80)  NULL DEFAULT NULL,
    PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    CONSTRAINT XXL_JOB_QRTZ_CRON_TRIGGERS_ibfk_1 FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES XXL_JOB_QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) ON DELETE RESTRICT ON UPDATE RESTRICT
);

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** B_QRTZ_CRON_TRIGGERS
-- SQLINES DEMO *** -----------
-- SQLINES LICENSE FOR EVALUATION USE ONLY
INSERT INTO XXL_JOB_QRTZ_CRON_TRIGGERS
VALUES ('getSchedulerFactoryBean', '1', '1', '0 0 0 * * ? *', 'Asia/Shanghai');

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_FIRED_TRIGGERS
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_FIRED_TRIGGERS;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE XXL_JOB_QRTZ_FIRED_TRIGGERS
(
    SCHED_NAME        varchar(120) NOT NULL,
    ENTRY_ID          varchar(95)  NOT NULL,
    TRIGGER_NAME      varchar(200) NOT NULL,
    TRIGGER_GROUP     varchar(200) NOT NULL,
    INSTANCE_NAME     varchar(200) NOT NULL,
    FIRED_TIME        bigint       NOT NULL,
    SCHED_TIME        bigint       NOT NULL,
    PRIORITY          int          NOT NULL,
    STATE             varchar(16)  NOT NULL,
    JOB_NAME          varchar(200) NULL DEFAULT NULL,
    JOB_GROUP         varchar(200) NULL DEFAULT NULL,
    IS_NONCONCURRENT  varchar(1)   NULL DEFAULT NULL,
    REQUESTS_RECOVERY varchar(1)   NULL DEFAULT NULL,
    PRIMARY KEY (SCHED_NAME, ENTRY_ID)
);


-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_LOCKS
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_LOCKS;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE XXL_JOB_QRTZ_LOCKS
(
    SCHED_NAME varchar(120) NOT NULL,
    LOCK_NAME  varchar(40)  NOT NULL,
    PRIMARY KEY (SCHED_NAME, LOCK_NAME)
);

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** B_QRTZ_LOCKS
-- SQLINES DEMO *** -----------
-- SQLINES LICENSE FOR EVALUATION USE ONLY
INSERT INTO XXL_JOB_QRTZ_LOCKS
VALUES ('getSchedulerFactoryBean', 'STATE_ACCESS');
-- SQLINES LICENSE FOR EVALUATION USE ONLY
INSERT INTO XXL_JOB_QRTZ_LOCKS
VALUES ('getSchedulerFactoryBean', 'TRIGGER_ACCESS');

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_PAUSED_TRIGGER_GRPS
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_PAUSED_TRIGGER_GRPS;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE XXL_JOB_QRTZ_PAUSED_TRIGGER_GRPS
(
    SCHED_NAME    varchar(120) NOT NULL,
    TRIGGER_GROUP varchar(200) NOT NULL,
    PRIMARY KEY (SCHED_NAME, TRIGGER_GROUP)
);

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_SCHEDULER_STATE
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_SCHEDULER_STATE;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE XXL_JOB_QRTZ_SCHEDULER_STATE
(
    SCHED_NAME        varchar(120) NOT NULL,
    INSTANCE_NAME     varchar(200) NOT NULL,
    LAST_CHECKIN_TIME bigint       NOT NULL,
    CHECKIN_INTERVAL  bigint       NOT NULL,
    PRIMARY KEY (SCHED_NAME, INSTANCE_NAME)
);

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** B_QRTZ_SCHEDULER_STATE
-- SQLINES DEMO *** -----------
-- SQLINES LICENSE FOR EVALUATION USE ONLY
INSERT INTO XXL_JOB_QRTZ_SCHEDULER_STATE
VALUES ('getSchedulerFactoryBean', 'DESKTOP-AQDP0691547908833367', 1547912525884, 5000);

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_SIMPLE_TRIGGERS
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_SIMPLE_TRIGGERS;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE XXL_JOB_QRTZ_SIMPLE_TRIGGERS
(
    SCHED_NAME      varchar(120) NOT NULL,
    TRIGGER_NAME    varchar(200) NOT NULL,
    TRIGGER_GROUP   varchar(200) NOT NULL,
    REPEAT_COUNT    bigint       NOT NULL,
    REPEAT_INTERVAL bigint       NOT NULL,
    TIMES_TRIGGERED bigint       NOT NULL,
    PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    CONSTRAINT XXL_JOB_QRTZ_SIMPLE_TRIGGERS_ibfk_1 FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES XXL_JOB_QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) ON DELETE RESTRICT ON UPDATE RESTRICT
);

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_SIMPROP_TRIGGERS
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_SIMPROP_TRIGGERS;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE XXL_JOB_QRTZ_SIMPROP_TRIGGERS
(
    SCHED_NAME    varchar(120)   NOT NULL,
    TRIGGER_NAME  varchar(200)   NOT NULL,
    TRIGGER_GROUP varchar(200)   NOT NULL,
    STR_PROP_1    varchar(512)   NULL DEFAULT NULL,
    STR_PROP_2    varchar(512)   NULL DEFAULT NULL,
    STR_PROP_3    varchar(512)   NULL DEFAULT NULL,
    INT_PROP_1    int            NULL DEFAULT NULL,
    INT_PROP_2    int            NULL DEFAULT NULL,
    LONG_PROP_1   bigint         NULL DEFAULT NULL,
    LONG_PROP_2   bigint         NULL DEFAULT NULL,
    DEC_PROP_1    decimal(13, 4) NULL DEFAULT NULL,
    DEC_PROP_2    decimal(13, 4) NULL DEFAULT NULL,
    BOOL_PROP_1   varchar(1)     NULL DEFAULT NULL,
    BOOL_PROP_2   varchar(1)     NULL DEFAULT NULL,
    PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    CONSTRAINT XXL_JOB_QRTZ_SIMPROP_TRIGGERS_ibfk_1 FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES XXL_JOB_QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) ON DELETE RESTRICT ON UPDATE RESTRICT
);


-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_TRIGGER_GROUP
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_TRIGGER_GROUP;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE SEQUENCE XXL_JOB_QRTZ_TRIGGER_GROUP_seq;

CREATE TABLE XXL_JOB_QRTZ_TRIGGER_GROUP
(
    id           int          NOT NULL DEFAULT NEXTVAL('XXL_JOB_QRTZ_TRIGGER_GROUP_seq'),
    app_name     varchar(64)  NOT NULL,
    title        varchar(25)  NOT NULL,
    order        smallint     NOT NULL DEFAULT 0,
    address_type smallint     NOT NULL DEFAULT 0,
    address_list varchar(512) NULL     DEFAULT NULL,
    PRIMARY KEY (id)
);

ALTER SEQUENCE XXL_JOB_QRTZ_TRIGGER_GROUP_seq RESTART WITH 2;

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** B_QRTZ_TRIGGER_GROUP
-- SQLINES DEMO *** -----------
-- SQLINES LICENSE FOR EVALUATION USE ONLY
INSERT INTO XXL_JOB_QRTZ_TRIGGER_GROUP
VALUES (1, 'xxl-job-executor-sample', '示例执行器', 1, 0, '192.168.31.79:9777');

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_TRIGGER_INFO
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_TRIGGER_INFO;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE SEQUENCE XXL_JOB_QRTZ_TRIGGER_INFO_seq;

CREATE TABLE XXL_JOB_QRTZ_TRIGGER_INFO
(
    id                        int          NOT NULL DEFAULT NEXTVAL('XXL_JOB_QRTZ_TRIGGER_INFO_seq'),
    job_group                 int          NOT NULL,
    job_cron                  varchar(128) NOT NULL,
    job_desc                  varchar(255) NOT NULL,
    add_time                  timestamp(0) NULL     DEFAULT NULL,
    update_time               timestamp(0) NULL     DEFAULT NULL,
    author                    varchar(64)  NULL     DEFAULT NULL,
    alarm_email               varchar(255) NULL     DEFAULT NULL,
    executor_route_strategy   varchar(50)  NULL     DEFAULT NULL,
    executor_handler          varchar(255) NULL     DEFAULT NULL,
    executor_param            varchar(512) NULL     DEFAULT NULL,
    executor_block_strategy   varchar(50)  NULL     DEFAULT NULL,
    executor_timeout          int          NOT NULL DEFAULT 0,
    executor_fail_retry_count int          NOT NULL DEFAULT 0,
    glue_type                 varchar(50)  NOT NULL,
    glue_source               text         NULL,
    glue_remark               varchar(128) NULL     DEFAULT NULL,
    glue_updatetime           timestamp(0) NULL     DEFAULT NULL,
    child_jobid               varchar(255) NULL     DEFAULT NULL,
    PRIMARY KEY (id)
);

ALTER SEQUENCE XXL_JOB_QRTZ_TRIGGER_INFO_seq RESTART WITH 2;

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** B_QRTZ_TRIGGER_INFO
-- SQLINES DEMO *** -----------
-- SQLINES LICENSE FOR EVALUATION USE ONLY
INSERT INTO XXL_JOB_QRTZ_TRIGGER_INFO
VALUES (1, 1, '0 0 0 * * ? *', '测试任务1', '2018-11-03 22:21:31', '2018-11-03 22:21:31', 'XXL', '', 'FIRST',
        'demoJobHandler', '', 'SERIAL_EXECUTION', 0, 0, 'BEAN', '', 'GLUE代码初始化', '2018-11-03 22:21:31', '');

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_TRIGGER_LOG
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_TRIGGER_LOG;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE SEQUENCE XXL_JOB_QRTZ_TRIGGER_LOG_seq;

CREATE TABLE XXL_JOB_QRTZ_TRIGGER_LOG
(
    id                        int          NOT NULL DEFAULT NEXTVAL('XXL_JOB_QRTZ_TRIGGER_LOG_seq'),
    job_group                 int          NOT NULL,
    job_id                    int          NOT NULL,
    executor_address          varchar(255) NULL     DEFAULT NULL,
    executor_handler          varchar(255) NULL     DEFAULT NULL,
    executor_param            varchar(512) NULL     DEFAULT NULL,
    executor_sharding_param   varchar(20)  NULL     DEFAULT NULL,
    executor_fail_retry_count int          NOT NULL DEFAULT 0,
    trigger_time              timestamp(0) NULL     DEFAULT NULL,
    trigger_code              int          NOT NULL,
    trigger_msg               text         NULL,
    handle_time               timestamp(0) NULL     DEFAULT NULL,
    handle_code               int          NOT NULL,
    handle_msg                text         NULL,
    alarm_status              smallint     NOT NULL DEFAULT 0,
    PRIMARY KEY (id)
);

ALTER SEQUENCE XXL_JOB_QRTZ_TRIGGER_LOG_seq RESTART WITH 8;

CREATE INDEX I_trigger_time ON XXL_JOB_QRTZ_TRIGGER_LOG (trigger_time);
CREATE INDEX I_handle_code ON XXL_JOB_QRTZ_TRIGGER_LOG (handle_code);

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_TRIGGER_LOGGLUE
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_TRIGGER_LOGGLUE;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE SEQUENCE XXL_JOB_QRTZ_TRIGGER_LOGGLUE_seq;

CREATE TABLE XXL_JOB_QRTZ_TRIGGER_LOGGLUE
(
    id          int          NOT NULL DEFAULT NEXTVAL('XXL_JOB_QRTZ_TRIGGER_LOGGLUE_seq'),
    job_id      int          NOT NULL,
    glue_type   varchar(50)  NULL     DEFAULT NULL,
    glue_source text         NULL,
    glue_remark varchar(128) NOT NULL,
    add_time    timestamp(0) NULL     DEFAULT NULL,
    update_time timestamp(0) NULL     DEFAULT NULL,
    PRIMARY KEY (id)
);

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** or XXL_JOB_QRTZ_TRIGGER_REGISTRY
-- SQLINES DEMO *** -----------
DROP TABLE IF EXISTS XXL_JOB_QRTZ_TRIGGER_REGISTRY;
-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE SEQUENCE XXL_JOB_QRTZ_TRIGGER_REGISTRY_seq;

CREATE TABLE XXL_JOB_QRTZ_TRIGGER_REGISTRY
(
    id             int          NOT NULL DEFAULT NEXTVAL('XXL_JOB_QRTZ_TRIGGER_REGISTRY_seq'),
    registry_group varchar(255) NOT NULL,
    registry_key   varchar(255) NOT NULL,
    registry_value varchar(255) NOT NULL,
    update_time    timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
);

ALTER SEQUENCE XXL_JOB_QRTZ_TRIGGER_REGISTRY_seq RESTART WITH 4;

-- SQLINES DEMO *** -----------
-- SQLINES DEMO *** B_QRTZ_TRIGGER_REGISTRY
-- SQLINES DEMO *** -----------
-- SQLINES LICENSE FOR EVALUATION USE ONLY
INSERT INTO XXL_JOB_QRTZ_TRIGGER_REGISTRY
VALUES (3, 'EXECUTOR', 'xxl-job-executor-sample', '192.168.31.79:9777', '2019-01-17 16:04:58');
